#!/usr/bin/env python
import sys
import re

auto_opcodes = []
opcode_values = {}
value_opcodes = {}

def die(errmsg):
    print >>sys.stderr, errmsg
    exit(1)

re_opcode_name = re.compile(r"[A-Z][A-Z0-9_]*")

def check_valid(name):
    m = re_opcode_name.match(name)
    (m and m.end() == len(name)) or die("invalid opcode name: %s" % name)

def parse_value(value):
    # TODO: handle octal (023), hex (0xdeadbeef), etc.
    return int(value)

def mkopcode(name, value=None):
    check_valid(name)
    if name in auto_opcodes or name in opcode_values:
        die("already defined opcode: %s", name)
    if value is None:
        auto_opcodes.append(name)
    else:
        intvalue = parse_value(value)
        intvalue < 256 or die("opcode value too large: %s", value)
        if intvalue in value_opcodes:
            die("already defined opcode with value: %s", value)
        opcode_values[name] = value
        value_opcodes[intvalue] = name

def assign_opcode_values():
    nextval = 0
    for name in auto_opcodes:
        while nextval in value_opcodes:
            nextval += 1
        nextval < 256 or die("opcode value too large: %s", nextval)
        opcode_values[name] = nextval
        value_opcodes[nextval] = name
        nextval += 1

def print_opcodes_h():
    maxnamelen = max(len(n) for n in opcode_values)
    maxvaluelen = max(len(str(n)) for n in value_opcodes)
    print "\n".join([
            "/* THIS HEADER IS AUTOGENERATED. DO NOT EDIT.",
            " * Internal header. do not include in clients of RVM. */",
            "#ifndef _OPCODES_H_",
            "#define _OPCODES_H_"])
    print
    for intvalue in sorted(value_opcodes):
        name = value_opcodes[intvalue]
        value = opcode_values[name]
        print ("#define %-*s ((opcode_t) (%*s))" %
               (maxnamelen, name, maxvaluelen, value))
    print "\n#endif"

if __name__ == "__main__":
    for line in sys.stdin:
        mkopcode(*line.split())
    assign_opcode_values()
    print_opcodes_h()
else:
    die("what are you smoking?! this is a script, not a module!")
